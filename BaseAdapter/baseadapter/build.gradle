apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

version = "1.4.6"
def siteUrl = 'https://github.com/zengcanxiang/BaseAdapter'      // 项目的主页
def gitUrl = 'https://github.com/zengcanxiang/BaseAdapter.git'   // Git仓库的url

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.1'

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 19
        versionCode 1
        versionName version
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    provided 'com.android.support:appcompat-v7:23.0.1'
    provided 'com.android.support:recyclerview-v7:23.0.1'
}


group = "com.zengcanxiang.baseAdapter"
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'encapsulation abslistView and recyclerView adapter' 	//项目描述
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'zengcanxiang'		//填写的一些基本信息
                        name 'zengcanxiang'
                        email 'zengcanxiang@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
android.libraryVariants.all { variant ->
    println "create generate${variant.name.capitalize()}Javadoc"
    task("generate${variant.name.capitalize()}Javadoc", type: Javadoc) {
        // title = ''
        // description = ''
        source = variant.javaCompile.source
        classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())
        options {
            encoding "utf-8"
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
    task("javadoc${variant.name.capitalize()}Jar",type: Jar, dependsOn: "generate${variant.name.capitalize()}Javadoc"){
        classifier = 'javadoc'
        from tasks.getByName("generate${variant.name.capitalize()}Javadoc").destinationDir
    }
    artifacts {
        archives tasks.getByName("javadoc${variant.name.capitalize()}Jar")
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    options.encoding = "UTF-8"
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "baseAdapter"	//发布到JCenter上的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}